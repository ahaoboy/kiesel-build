name: build

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"
    branches:
      - "main"
  pull_request:
  schedule:
    - cron: "0 0 * * *"

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.target }}
    if: false
    steps:
      - uses: actions/checkout@v4

      - uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          msystem: MINGW64
          update: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-perl
            mingw-w64-x86_64-python3
            zip
            unzip
            curl
            wget
      - name: build-${{ matrix.target }}
        if: matrix.os != 'windows-latest'
        shell: "bash"
        run: |
          bash build.sh ${{ matrix.target }}

      - name: build-windows
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          bash build.sh ${{ matrix.target }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kiesel-${{ matrix.target }}
          path: ./kiesel-${{ matrix.target }}.tar.gz
  download:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: download
        run: |
          bash download.sh "https://files.kiesel.dev/kiesel-macos-aarch64" aarch64-apple-darwin
          bash download.sh "https://files.kiesel.dev/kiesel-windows-x86_64.exe" x86_64-pc-windows-msvc
          bash download.sh "https://files.kiesel.dev/kiesel-linux-x86_64" x86_64-unknown-linux-gnu
      - name: Upload kiesel-aarch64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: kiesel-aarch64-apple-darwin
          path: kiesel-aarch64-apple-darwin.tar.gz
      - name: Upload x86_64-unknown-linux-gnu
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu
          path: kiesel-x86_64-unknown-linux-gnu.tar.gz
      - name: Upload x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-pc-windows-msvc
          path: kiesel-x86_64-pc-windows-msvc.tar.gz
  release:
    needs: download
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: kiesel
          pattern: kiesel*
          merge-multiple: true

      - name: release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "kiesel/*.tar.gz"
          allowUpdates: true
          tag: "nightly"
          name: "nightly"
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: main
          replacesArtifacts: true

  post-test:
    needs: ["release"]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: easy-install/easy-setup@v1
        with:
          url: https://github.com/ahaoboy/kiesel-build
      - name: test
        run: |
          which kiesel
          kiesel "console.log(1+1)" >> ./test.js
          kiesel ./test.js
